        {% for hypervisor in openstack_hypervisors %}
        mons_slave_port_{{ loop.index }}:
                type: OS::Neutron::Port
                properties:
                        name: mons-slave-port-{{ loop.index }}
                        network: { get_resource: mons_network }
                        fixed_ips:
                                - subnet_id: { get_resource: mons_subnet }
                        security_groups:
                                - default
                                - { get_resource: mons_security_group }

        {% if assign_floating_ip_daemon_set %}
        mons_slave_floating_ip_{{ loop.index }}:
                type: OS::Neutron::FloatingIP
                properties:
                        floating_network: { get_param: public_network }
                        port_id: { get_resource: mons_slave_port_{{ loop.index }} }

        {% endif %}
        mons_slave_instance_{{ loop.index }}:
                type: OS::Nova::Server
                properties:
                        availability_zone:
                                str_replace:
                                        template: AZ:HV
                                        params:
                                                AZ: { get_param: availability_zone }
                                                HV: {{ hypervisor.name.split('.')[0] }}
                        flavor: { get_resource: mons_slave_flavor }
                        image: { get_param: slave_image_id }
                        key_name: { get_resource: mons_key_pair }
                        networks:
                                - port: { get_resource: mons_slave_port_{{ loop.index }} }
                        name:
                                str_replace:
                                        template: slave_name-HV
                                        params:
                                                slave_name: { get_param: slave_instance_name }
                                                HV: {{ hypervisor.name.split('.')[0] }}
                        {% if check_internet_access_daemon_set %}
                        user_data_format: SOFTWARE_CONFIG
                        user_data: |
                                #cloud-config
                                runcmd:
                                        - python3 /home/ubuntu/monitoring/customCollector/custom_collector.py
                        {% endif %}

        {% endfor %}
