#jinja2: lstrip_blocks: True
heat_template_version: 2018-03-02

description: Template to deploy master and slave instances for openstack workload monitoring

parameters:
        internal_network_cidr:
                type: string
                description: cidr of private mons network
                default: 10.0.1.0/24
        public_network_uuid:
                type: string
                description: UUID of public network
        public_network:
                type: string
                description: name of public network
        master_image_id:
                type: string
                description: image id of master instance
        slave_image_id:
                type: string
                description: image id of slave instance
        master_instance_name:
                type: string
                description: master instance name
        slave_instance_name:
                type: string
                description: slave instance name
        availability_zone:
                type: string
                description: name of availability zone
                default: nova

resources:
        {% include "common_resources.j2" %}
                        
        {% include "daemon_set.j2" -%}

        {% include "random_set.j2" %}
        mons_master_port:
                type: OS::Neutron::Port
                properties:
                        name: mons-master-port
                        network: { get_resource: mons_network }
                        fixed_ips:
                                - subnet_id: { get_resource: mons_subnet }
                        security_groups:
                                - default
                                - { get_resource: mons_security_group }

        mons_master_floating_ip:
                type: OS::Neutron::FloatingIP
                properties:
                        floating_network: { get_param: public_network }
                        port_id: { get_resource: mons_master_port }

        mons_master_instance:
                type: OS::Nova::Server
                properties:
                        availability_zone: { get_param: availability_zone }
                        config_drive: "true"
                        flavor: { get_resource: mons_master_flavor }
                        image: { get_param: master_image_id }
                        key_name: { get_resource: mons_key_pair }
                        networks:
                                - port: { get_resource: mons_master_port }
                        name: { get_param: master_instance_name }
                        user_data_format: SOFTWARE_CONFIG
                        user_data:
                                str_replace:
                                        template: |
                                                #cloud-config
                                                write_files:
                                                        - path: /home/ubuntu/monitoring/config/prometheus.yml
                                                          owner: nobody:nogroup
                                                          permissions: '0644'
                                                          content: |
                                                                  global:
                                                                          scrape_interval: 5s
                                                                          evaluation_interval: 10s

                                                                  scrape_configs:
                                                                          - job_name: "prometheus"

                                                                            scrape_interval: 2s
                                                                            scrape_timeout: 1s
                                                                            honor_labels: true

                                                                            static_configs:
                                                                                    - targets: ["prometheus:9090"]

                                                                          - job_name: "openstack_floating_network"
                                                                            scrape_interval: 2s
                                                                            scrape_timeout: 1s
                                                                            honor_labels: true

                                                                            static_configs:
                                                                                    {% if assign_floating_ip_daemon_set %}
                                                                                    {% for hypervisor in openstack_hypervisors %}
                                                                                    - targets: ["mons_slave_floating_ip_address_{{ loop.index }}:9100"]
                                                                                      labels:
                                                                                              location: "{{ hypervisor.name.split('.')[0] }}"
                                                                                    {% endfor %}
                                                                                    {% endif %}
                                                                                    {% if assign_floating_ip_random_set %}
                                                                                    {% for i in range(random_instance_count) %}
                                                                                    - targets: ["mons_slave_floating_ip_random_address_{{ loop.index }}:9100"]
                                                                                      labels:
                                                                                              location: "random_instance_{{ loop.index }}"
                                                                                    {% endfor %}
                                                                                    {% endif %}

                                                                          - job_name: "openstack_internal_network"
                                                                            scrape_interval: 2s
                                                                            scrape_timeout: 1s
                                                                            honor_labels: true

                                                                            static_configs:
                                                                                    {% for hypervisor in openstack_hypervisors %}
                                                                                    - targets: ["mons_slave_address_{{ loop.index }}:9100"]
                                                                                      labels:
                                                                                              location: "{{ hypervisor.name.split('.')[0] }}"
                                                                                    {% endfor %}
                                                                                    {% for i in range(random_instance_count) %}
                                                                                    - targets: ["mons_slave_address_random_{{ loop.index }}:9100"]
                                                                                      labels:
                                                                                              location: "random_instance_{{ loop.index }}"
                                                                                    {% endfor %}

                                                                          - job_name: "check_internet_access"
                                                                            scrape_interval: 2s
                                                                            scrape_timeout: 1s
                                                                            honor_labels: true

                                                                            static_configs:
                                                                                    {% if check_internet_access_daemon_set %}
                                                                                    {% for hypervisor in openstack_hypervisors %}
                                                                                    - targets: ["mons_slave_address_{{ loop.index }}:9721"]
                                                                                      labels:
                                                                                              location: "{{ hypervisor.name.split('.')[0] }}"
                                                                                    {% endfor %}
                                                                                    {% endif %}
                                                                                    {% if check_internet_access_random_set %}
                                                                                    {% for i in range(random_instance_count) %}
                                                                                    - targets: ["mons_slave_address_random_{{ loop.index }}:9721"]
                                                                                      labels:
                                                                                              location: "random_instance_{{ loop.index }}"
                                                                                    {% endfor %}
                                                                                    {% endif %}

                                                                          - job_name: alerta
                                                                            metrics_path: /api/management/metrics
                                                                            static_configs:
                                                                                    - targets: ["alerta:8080"]

                                                                  alerting:
                                                                          alertmanagers:
                                                                                  - scheme: http
                                                                                    static_configs:
                                                                                            - targets: ["alertmanager:9093"]

                                                                  rule_files:
                                                                          - "rules.conf"
                                                runcmd:
                                                        - bash /import_docker_images.sh
                                                        - docker-compose -p /home/ubuntu/monitoring/ -f /home/ubuntu/monitoring/docker-compose.yml up
                                        params:
                                                {% if assign_floating_ip_daemon_set %}
                                                {% for hypervisor in openstack_hypervisors %}
                                                mons_slave_floating_ip_address_{{ loop.index }}: { get_attr: [ mons_slave_floating_ip_{{ loop.index }}, floating_ip_address ] }
                                                mons_slave_address_{{ loop.index }}: { get_attr: [ mons_slave_instance_{{ loop.index }}, first_address ] }
                                                {% endfor %}
                                                {% else %}
                                                {% for hypervisor in openstack_hypervisors %}
                                                mons_slave_address_{{ loop.index }}: { get_attr: [ mons_slave_instance_{{ loop.index }}, first_address ] }
                                                {% endfor %}
                                                {% endif %}
                                                {% if assign_floating_ip_random_set %}
                                                {% for i in range(random_instance_count) %}
                                                mons_slave_floating_ip_random_address_{{ loop.index }}: { get_attr: [ mons_slave_floating_ip_random_{{ loop.index }}, floating_ip_address ] }
                                                mons_slave_address_random_{{ loop.index }}: { get_attr: [ mons_slave_instance_random_{{ loop.index }}, first_address ] }
                                                {% endfor %}
                                                {% else %}
                                                {% for i in range(random_instance_count) %}
                                                mons_slave_address_random_{{ loop.index }}: { get_attr: [ mons_slave_instance_random_{{ loop.index }}, first_address ] }
                                                {% endfor %}
                                                {% endif %}
