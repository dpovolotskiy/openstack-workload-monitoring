	master_user_data:
                type: OS::Heat::CloudConfig
                properties:
                        cloud_config:
                                str_replace:
                                  template:
                                    write_files:
                                      - path: /home/ubuntu/monitoring/config/prometheus.yml
                                        owner: root:root
                                        permissions: '0644'
                                        content: |
                                          global:
                                            scrape_interval: 5s
                                            evaluation_interval: 10s

                                          scrape_configs:
                                            - job_name: "prometheus"

                                              scrape_interval: 2s
                                              scrape_timeout: 1s
                                              honor_labels: true

                                              static_configs:
                                                - trgets: ["prometheus:9090"]

                                            - job_name: "openstack_floating_network"
                                              scrape_interval: 2s
                                              scrape_timeout: 1s
                                              honor_labels: true

                                              static_configs:
                                                {% if assign_floating_ip_daemon_set %}
                                                {% for hypervisor in openstack_hypervisors %}
                                                - targets: ["mons_slave_floating_ip_address_{{ loop.index }}:9100"]
                                                labels:
                                                  location: "{{ hypervisor.name.split('.')[0] }}"
                                                {% endfor %}
                                                {% endif %}
                                                {% if assign_floating_ip_random_set %}
                                                {% for i in range(random_instance_count) %}
                                                - targets: ["mons_slave_floating_ip_random_address_{{ loop.index }}:9100"]
                                                  labels:
                                                    location: "random_instance_{{ loop.index }}"
                                                {% endfor %}
                                                {% endif %}

                                            - job_name: "openstack_internal_network"
                                              scrape_interval: 2s
                                              scrape_timeout: 1s
                                              honor_labels: true

                                              static_configs:
                                                {% for hypervisor in openstack_hypervisors %}
                                                - targets: ["mons_slave_address_{{ loop.index }}:9100"]
                                                  labels:
                                                    location: "{{ hypervisor.name.split('.')[0] }}"
                                                {% endfor %}
                                                {% for i in range(random_instance_count) %}
                                                - targets: ["mons_slave_address_random_{{ loop.index }}:9100"]
                                                  labels:
                                                    location: "random_instance_{{ loop.index }}"
                                                {% endfor %}

                                            - job_name: alerta
                                              metrics_path: /api/management/metrics
                                              static_configs:
                                              - targets: ["alerta:8080"]

                                          alerting:
                                            alertmanagers:
                                            - scheme: http
                                              static_configs:
                                              - targets: ["alertmanager:9093"]

                                          rule_files:
                                            - "rules.conf"

                                    runcmd:
                                      - bash /import_docker_images.sh
                                      - docker-compose -f /home/ubuntu/monitoring/docker-compose.yml
                                  params:
                                    {% if assign_floating_ip_daemon_set %}
                                    {% for hypervisor in openstack_hypervisors %}
                                    mons_slave_floating_ip_address_{{ loop.index }}: { get_attr: [ mons_slave_floating_ip_{{ loop.index }}, floating_ip_address ] }
                                    mons_slave_address_{{ loop.index }}: { get_attr: [ mons_slave_instance_{{ loop.index }}, first_address ] }
                                    {% endfor %}
                                    {% else %}
                                    {% for hypervisor in openstack_hypervisors %}
                                    mons_slave_address_{{ loop.index }}: { get_attr: [ mons_slave_instance_{{ loop.index }}, first_address ] }
                                    {% endfor %}
                                    {% endif %}
                                    {% if assign_floating_ip_random_set %}
                                    {% for i in range(random_instance_count) %}
                                    mons_slave_floating_ip_random_address_{{ loop.index }}: { get_attr: [ mons_slave_floating_ip_random_{{ loop.index }}, floating_ip_address ] }
                                    mons_slave_address_random_{{ loop.index }}: { get_attr: [ mons_slave_instance_random_{{ loop.index }}, first_address ] }
                                    {% endfor %}
                                    {% else %}
                                    {% for i in range(random_instance_count) %}
                                    mons_slave_address_random_{{ loop.index }}: { get_attr: [ mons_slave_instance_random_{{ loop.index }}, first_address ] }
                                    {% endfor %}
                                    {% endif %}
