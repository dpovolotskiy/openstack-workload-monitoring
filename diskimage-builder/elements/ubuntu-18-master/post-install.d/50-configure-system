#!/bin/bash

useradd -s /bin/bash -d /home/demo/ -m -G sudo demo

echo demo:demo | chpasswd

sed -i 's/PasswordAuthentication .*/PasswordAuthentication yes/g' /etc/ssh/sshd_config

mkdir -p /home/ubuntu/monitoring/{data,config}
mkdir -p /home/ubuntu/monitoring/data/prometheus/

chown -R nobody:root /home/ubuntu/monitoring/data/prometheus/

cat > /home/ubuntu/monitoring/config/alertmanager.yml <<EOF
global:
  # The smarthost and SMTP sender used for mail notifications.
  smtp_smarthost: 'localhost:25'
  smtp_from: 'alertmanager@example.org'

route:
  receiver: "alerta"
  group_by: ['alertname']
  group_wait:      30s
  group_interval:  5m
  repeat_interval: 2h

receivers:
- name: "alerta"
  webhook_configs:
  - url: 'http://alerta:8080/api/webhooks/prometheus'
    send_resolved: true
EOF

chown -R root:root /home/ubuntu/monitoring/config/alertmanager.yml
chmod 0644 /home/ubuntu/monitoring/config/alertmanager.yml

cat > /home/ubuntu/monitoring/config/rules.conf <<EOF
groups:
- name: example
  rules:

  - alert: InstanceDown
    expr: up == 0
    labels:
      severity: critical
    annotations:
      summary: "Instance {{ '{{' }} $labels.instance {{ '}}' }} down"
      description: "{{ '{{' }} $labels.instance {{ '}}' }} of job {{ '{{' }} $labels.job {{ '}}' }} has been down"
EOF

chown -R root:root /home/ubuntu/monitoring/config/rules.conf
chmod 0644 /home/ubuntu/monitoring/config/rules.conf

cat > /home/ubuntu/monitoring/docker-compose.yml <<EOF
version: '2.1'

services:
  prometheus:
    image: prom/prometheus:v2.7.2
    volumes:
      - ./config:/prometheus
      - ./data/prometheus:/data
    command:
      - '--config.file=/prometheus/prometheus.yml'
      - '--storage.tsdb.no-lockfile'
      - '--storage.tsdb.path=/data'
      - '--storage.tsdb.retention.size=512MB'
    ports:
      - 9090:9090
    restart: always
    networks:
      - promnet

  alertmanager:
    image: prom/alertmanager:v0.15.0
    volumes:
      - ./config:/prometheus
      - ./data/alertmanager:/data
    command:
      - '-config.file=/prometheus/alertmanager.yml'
      - '-storage.path=/data'
    ports:
      - 9093:9093
    networks:
      - promnet

  alerta:
    image: alerta/alerta-web
    ports:
      - 9080:8080
    depends_on:
      - db
    environment:
      - AUTH_REQUIRED=${AUTH_REQUIRED:-False}
      - ADMIN_USERS=${ADMIN_USERS:-not-set}
      - CUSTOMER_VIEWS=${CUSTOMER_VIEWS:-False}
      - PROVIDER=${PROVIDER:-basic}
      - CLIENT_ID=${CLIENT_ID:-not-set}
      - CLIENT_SECRET=${CLIENT_SECRET:-not-set}
      - ALLOWED_EMAIL_DOMAIN=${ALLOWED_EMAIL_DOMAIN:-*}
      - ALLOWED_GITHUB_ORGS=${ALLOWED_GITHUB_ORGS:-*}
      - GITLAB_URL=${GITLAB_URL:-not-set}
      - ALLOWED_GITLAB_GROUPS=${ALLOWED_GITLAB_GROUPS:-*}
      - INSTALL_PLUGINS=slack,prometheus
      - PLUGINS=${PLUGINS:-reject,prometheus}
      - ALERTMANAGER_API_URL=http://alertmanager:9093
      - ORIGIN_BLACKLIST=${ORIGIN_BLACKLIST:-not-set}
      - ALLOWED_ENVIRONMENTS=${ALLOWED_ENVIRONMENTS:-Production,Development}
      - MONGO_URI=mongodb://db:27017/monitoring
    restart: always
    networks:
      - promnet
      - dbnet

  db:
    image: mongo
    volumes:
      - ./data/mongodb:/data/db
    restart: always
    networks:
      - dbnet

networks:
  promnet:
    driver: bridge
  dbnet:
    driver: bridge
EOF

chown -R root:root /home/ubuntu/monitoring/docker-compose.yml
chmod 0644 /home/ubuntu/monitoring/docker-compose.yml

cat > /import_docker_images.sh <<EOF
#!/bin/bash

docker load -i /prom_prometheus.tar
rm -f /prom_prometheus.tar
docker load -i /prom_alertmanager.tar
rm -f /prom_alertmanager.tar
docker load -i /alerta_alerta-web.tar
rm -f /alerta_alerta-web.tar
docker load -i /library_mongo.tar
rm -f /library_mongo.tar

rm -f /import_docker_images.sh
EOF

chown -R root:root /import_docker_images.sh
chmod +x /import_docker_images.sh
